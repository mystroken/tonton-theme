extends ../index
block title
    <?php
    |   //Template Name: Archived
    |?>

block content
    .barba-container.page-archived.e-wp(data-barba="container", data-barba-namespace="archived", data-namespace="archived" data-current!="" data-scroll-content)
        .gallery
            .gallery__travel.e-rel.e-hp
                <?php $index = 0; if(have_rows('dribbble_shots')): while(have_rows('dribbble_shots')) : the_row(); $index++;?>
                    .gallery__each(data-item!='<?=$index?>', data-plx!='<?=($index % 2 === 0) ? "on" : ""?>', data-zindex!='<?=$index?>', class!="gallery__img__<?=$index?>")
                        .gallery__img.e-hidden.e-rel.e-hp.e-wp
                            picture.e-flex
                                img(src!="<?=the_sub_field('image')?>" alt="" data-dribbble-link!="<?=the_sub_field('url')?>" data-name!="<?=the_sub_field('name')?>" data-front!='<?=$index?>').e-hp.e-wp.e-img-fit.js-img.img-load
                <?php endwhile; else : endif; ?>

        script#shaderFrag(type='x-shader/x-vertex').
            precision mediump float;
            varying vec2 vTextureCoord;
            uniform sampler2D uSampler;
            uniform float time;
            uniform float frequency;
            uniform float amplitude;
            uniform float amplitudeY;
            uniform float speed;
            void main() {
              vec2 position = vTextureCoord;
              float distortion = sin(position.y * frequency + time * speed) * amplitude;
              float distortion2 = sin(position.x * frequency + time * speed) * amplitudeY;
              gl_FragColor = texture2D(uSampler, vec2(position.x + distortion, position.y + distortion2));
            }

        //- =========================  FOOTER  ========================= -//
        //- =========================  FOOTER  ========================= -//
        script#shaderFragArchive(type='x-shader/x-vertex').
            precision mediump float;
            varying vec2 vTextureCoord;
            uniform sampler2D uSampler;
            uniform float time;
            uniform float frequency;
            uniform float amplitude;
            uniform float amplitudeY;
            uniform float speed;
            void main() {
              vec2 position = vTextureCoord;
              float distortion = sin(position.y * frequency + time * speed) * amplitude;
              float distortion2 = sin(position.x * frequency + time * speed) * amplitudeY;
              gl_FragColor = texture2D(uSampler, vec2(position.x + distortion, position.y + distortion2));
            }
        <?php wp_footer(); ?>
